/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.53
 * Generated at: 2020-05-22 00:52:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.yejoin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/C:/Users/hong/Desktop/hyusikpro/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/pprr/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1590049336297L));
    _jspx_dependants.put("/header/header.jsp", Long.valueOf(1590060296384L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>header</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("#rank {width: 200px;position: relative;top: -35px;left: 940px;}\r\n");
      out.write("#rank-list {overflow: hidden;width: 300px;height: 20px;margin: 0;}\r\n");
      out.write("#rank-list dd {position: relative;margin: 0;}\r\n");
      out.write("#rank-list ol {position: absolute;top: 0;left: 0;margin: 0;padding: 0;list-style-type: none;}\r\n");
      out.write("#rank-list li {height: 20px;line-height: 20px;}\r\n");
      out.write("</style>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("$(function() {\r\n");
      out.write("    var count = $('#rank-list li').length;\r\n");
      out.write("    var height = $('#rank-list li').height();\r\n");
      out.write("\r\n");
      out.write("    function step(index) {\r\n");
      out.write("        $('#rank-list ol').delay(2000).animate({\r\n");
      out.write("            top: -height * index,\r\n");
      out.write("        }, 500, function() {\r\n");
      out.write("            step((index + 1) % count);\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    step(1);\r\n");
      out.write("});\r\n");
      out.write("function ranking(){\r\n");
      out.write("\tif(location=='http://localhost:8090/' || location=='http://localhost:8090/index.jsp'){\r\n");
      out.write("\tlocation.replace(\"/main.go\");}\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/header/header_style.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body onload=\"ranking()\">\r\n");
      out.write("<header class=\"body\">\r\n");
      out.write("<form name=\"form1\" action=\"");
      out.print(request.getContextPath());
      out.write("/info.go\" method=\"get\">\r\n");
      out.write("<!-- target=\"_blank\" 클릭하면 새창 -->\r\n");
      out.write("<span class=\"logo\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/main.go\">휴~ 식</a></span>\t\r\n");
      out.write("  <div id=\"choice\">\r\n");
      out.write("  <!-- http://localhost:8090/kim/header/header_login.jsp?site=? -->\r\n");
      out.write("    <select name=\"site\" id=\"site\" style=\"width:50%;height:30px;\">\r\n");
      out.write("    \t<option selected>선택하세요</option>\r\n");
      out.write("        \t<option value=\"1\">서울 만남의 광장 부산방향</option>\r\n");
      out.write("            <option value=\"2\">죽전휴게소 서울방향</option>\r\n");
      out.write("            <option value=\"3\">기흥휴게소 부산방향</option>\r\n");
      out.write("            <option value=\"4\">안성휴게소 서울방향</option>\r\n");
      out.write("            <option value=\"5\">입장거봉포도휴게소 서울방향</option>\r\n");
      out.write("            <option value=\"6\">망향휴게소 부산방향</option>\r\n");
      out.write("            <option value=\"7\">천안삼거리휴게소 서울방향</option>\r\n");
      out.write("            <option value=\"8\">천안호두휴게소 부산방향</option>\r\n");
      out.write("            <option value=\"9\">청주휴게소 서울방향</option>\r\n");
      out.write("            <option value=\"10\">옥산휴게소 부산방향</option>\r\n");
      out.write("            <option value=\"11\">죽암휴게소 서울방향</option>\r\n");
      out.write("            <option value=\"12\">죽암휴게소 부산방향</option>\r\n");
      out.write("            <option value=\"13\">신탄진휴게소 서울방향</option>\r\n");
      out.write("    </select>\r\n");
      out.write("\t\t<input type=\"submit\" value=\"찾기\" style=\"height:30px;\"/>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t</form>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<nav class=\"nav\">\r\n");
      out.write("\t\t\t<ul class=\"list\">\r\n");
      out.write("\t\t\t\t<!-- filter설정하기 -->\r\n");
      out.write("\t\t\t\t<li class=\"list-item\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/notice/list.go\">공지사항</a></li>\r\n");
      out.write("\t\t\t\t<li class=\"list-item\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/road/roadsa.jsp\">사고</a></li>\r\n");
      out.write("\t\t\t\t<li class=\"list-item\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/road.go\">공사</a></li>\r\n");
      out.write("\t\t\t\t<li class=\"list-item\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/recommend/re.jsp\">추천휴게소</a></li>\r\n");
      out.write("                <li class=\"list-item\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/oilprice.go\">추천주유소</a></li>\r\n");
      out.write("                <li class=\"list-item\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/review/review_list.jsp\">리뷰</a></li>\r\n");
      out.write("                \r\n");
      out.write("                ");
      //  c:if
      org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
      boolean _jspx_th_c_005fif_005f0_reused = false;
      try {
        _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f0.setParent(null);
        // /header/header.jsp(76,16) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${!empty AUTHUSER }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
        int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
        if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write(" <!-- 로그인시 -->\r\n");
            out.write("                \t");
            //  c:if
            org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
            boolean _jspx_th_c_005fif_005f1_reused = false;
            try {
              _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
              _jspx_th_c_005fif_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
              // /header/header.jsp(77,17) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${AUTHUSER.admin ==1}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
              int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
              if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                do {
                  out.write("\r\n");
                  out.write("                \t\t<li class=\"list-item\"><a href=\"");
                  out.print(request.getContextPath());
                  out.write("/admin.go\">관리자</a></li>\r\n");
                  out.write("                \t");
                  int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
              }
              if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
              _jspx_th_c_005fif_005f1_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
            }
            out.write("\r\n");
            out.write("                \t");
            //  c:if
            org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
            boolean _jspx_th_c_005fif_005f2_reused = false;
            try {
              _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
              _jspx_th_c_005fif_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
              // /header/header.jsp(80,17) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${AUTHUSER.admin ==0}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
              int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
              if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                do {
                  out.write("\r\n");
                  out.write("                \t\t<li class=\"list-item\"><a href=\"");
                  out.print(request.getContextPath());
                  out.write("/myPage.go\">마이페이지</a></li>\r\n");
                  out.write("                \t");
                  int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
              }
              if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
              _jspx_th_c_005fif_005f2_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
            }
            out.write("\r\n");
            out.write("\t\t\t\t\t<li class=\"list-item\"><a href=\"");
            out.print(request.getContextPath());
            out.write("/logout.go\">로그아웃</a></li>\r\n");
            out.write("\t\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
        _jspx_th_c_005fif_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
      }
      out.write("\r\n");
      out.write("                ");
      //  c:if
      org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
      boolean _jspx_th_c_005fif_005f3_reused = false;
      try {
        _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f3.setParent(null);
        // /header/header.jsp(85,16) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty AUTHUSER }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
        int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
        if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write(" <!--미로그인시--> \r\n");
            out.write("\t\t\t\t\t<li class=\"list-item\"><a href=\"");
            out.print(request.getContextPath());
            out.write("/login.go\">로그인</a></li>\r\n");
            out.write("\t\t\t\t\t<li class=\"list-item\"><a href=\"");
            out.print(request.getContextPath());
            out.write("/join.go\">회원가입</a></li>\r\n");
            out.write("                ");
            int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
        _jspx_th_c_005fif_005f3_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f3_reused);
      }
      out.write("\r\n");
      out.write("                \r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</nav>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t<div id=\"rank\">\r\n");
      out.write("\t\t<dl id=\"rank-list\">\r\n");
      out.write("\t\t\t<dd>\r\n");
      out.write("\t\t\t\t<ol>\r\n");
      out.write("\t\t\t\t<li>휴게소 만족도 순위</li>\r\n");
      out.write("\t\t\t\t");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                </ol>\r\n");
      out.write("            </dd>\r\n");
      out.write("        </dl>\r\n");
      out.write("    </div>\r\n");
      out.write("</header>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"utf-8\">\r\n");
      out.write("  <title>휴~식 약관동의</title>\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"http://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css\">\r\n");
      out.write("  <script src=\"http://code.jquery.com/jquery-1.10.2.js\"></script>\r\n");
      out.write("  <script src=\"http://code.jquery.com/ui/1.11.4/jquery-ui.js\"></script>\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"/resources/demos/style.css\">\r\n");
      out.write("   <style type=\"text/css\">\r\n");
      out.write("    #d1{\r\n");
      out.write("     width:770px;\r\n");
      out.write("     margin:0 auto;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("   </style>\r\n");
      out.write("   <!-- accordion 접히는 Script 선언 -->\r\n");
      out.write("  <script>\r\n");
      out.write("  $(function() {\r\n");
      out.write("    $( \"#accordion\" ).accordion();\r\n");
      out.write("    $('#accordion input[type=\"checkbox\"]').click(function(e) {\r\n");
      out.write("        e.stopPropagation();\r\n");
      out.write("    });\r\n");
      out.write("  });\r\n");
      out.write("  \r\n");
      out.write("  </script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<form action=\"");
      out.print(request.getContextPath());
      out.write("/joinbe.go\" id=\"form1\" method=\"post\">\r\n");
      out.write("<div id=\"d1\">\r\n");
      out.write(" <br><br>\r\n");
      out.write(" <h2 align=\"center\">회원가입을 환영합니다.</h2><br/><br/>\r\n");
      out.write("  <tr>\r\n");
      out.write("   <td align=\"left\"><font size=\"2\">이용약관, 개인정보 수집 및 이용에 모두 동의합니다.</font></td>\r\n");
      out.write("\r\n");
      out.write("   <td><input type=\"checkbox\" name=\"all\" id=\"all\"></td><hr/>\r\n");
      out.write("  </tr>\r\n");
      out.write(" <div id=\"accordion\">\r\n");
      out.write("\r\n");
      out.write("   <h3><font size=\"2\">휴~식 이용약관 동의(필수)</font><input type=\"checkbox\" name=\"c1\" id=\"c1\"/></a></h3>\r\n");
      out.write("   <td><textarea readonly=\"readonly\" rows=\"5\" cols=\"66\">\r\n");
      out.write("제 1 조 (목적)\r\n");
      out.write("\r\n");
      out.write("이 약관은 휴~식 홈페이지의 모든 제반 서비스의 이용과 관련하여 귀 홈페이지의 사용자에 대한 권리, 의무 및 책임사항, 기타 필요한 사항을 규정함을 목적으로 합니다.\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("제 2 조 (정의)\r\n");
      out.write("\r\n");
      out.write("이 약관에서 사용하는 용어의 정의는 다음과 같습니다.\r\n");
      out.write("①\"서비스\"라 함은 구현되는 단말기(PC, 휴대형단말기 등의 각종 유무선 장치를 포함)와 상관없이 \"회원\"이 이용할 수 있는 휴식 홈페이지의 제반 서비스를 의미합니다.\r\n");
      out.write("②\"회원\"이라 함은 회사의 \"서비스\"에 접속하여 이 약관에 따라 \"휴~식\"홈페이지와의 이용계약을 체결하고 저희 홈페이지에서 제공하는 \"서비스\"를 이용하는 고객을 말합니다.\r\n");
      out.write("③\"이메일(Email)=아이디(ID)\"라 함은 \"회원\"의 식별과 \"서비스\" 이용을 위하여 \"회원\"이 정하고 저희 홈페이지에서 승인하는 문자와 숫자 및 특수기호의 조합을 의미합니다.\r\n");
      out.write("④\"비밀번호\"라 함은 \"회원\"이 부여 받은 \"아이디\"와 일치되는 \"회원\"임을 확인하고 비밀보호를 위해 \"회원\" 자신이 정한 문자 또는 숫자 그리고 특수기호의의 조합을 의미합니다.\r\n");
      out.write("⑤\"게시물\"이라 함은 \"회원\"이 \"서비스\"를 이용함에 있어 \"게시판\"에 게시한 부호ㆍ문자ㆍ음성ㆍ음향ㆍ화상ㆍ동영상 등의 정보 형태의 글, 사진, 동영상 및 각종 파일과 링크 등을 의미합니다.\r\n");
      out.write("   </textarea>\r\n");
      out.write("   <h3><a href=\"#\"><font size=\"2\">개인정보 수집 및 이용에 대한 안내(필수)</font><input type=\"checkbox\" name=\"c2\" id=\"c2\"/></a></h3>\r\n");
      out.write("   <div>\r\n");
      out.write("     <textarea readonly=\"readonly\" rows=\"5\" cols=\"66\">\r\n");
      out.write("\r\n");
      out.write("정보통신망법 규정에 따라 휴~식에 회원가입 신청하시는 분께 수집하는 개인정보의 항목, 개인정보의 수집 및 이용목적을 안내 드리오니 자세히 읽은 후 동의하여 주시기 바랍니다.\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("1. 수집하는 개인정보\r\n");
      out.write("\r\n");
      out.write("이용자는 회원가입을 하지 않은 상태에서 \"게시물\"작성과 기타 회원 서비스 외 정보 확인을 위한 데이터를 제공하며, 회원등록 시 최소한의 개인정보(\"이메일\", \"생년월일\", \"성별\")를 수집하여 회원관리에 사용함을 명시합니다.\r\n");
      out.write("\r\n");
      out.write("제 1 조 (목적)\r\n");
      out.write("이 약관은 휴~식 홈페이지(이하 “휴~식”)에서 제공하는 위치정보사업 또는 위치기반서비스사업과 관련하여 회사와 개인위치정보주체와의 권리, 의무 및 책임사항, 기타 필요한 사항을 규정함을 목적으로 합니다.\r\n");
      out.write("\r\n");
      out.write("제 2 조 (약관 외 준칙)\r\n");
      out.write("이 약관에 명시되지 않은 사항은 위치정보의 보호 및 이용 등에 관한 법률, 정보통신망 이용촉진 및 정보보호 등에 관한 법률, 전기통신기본법, 전기통신사업법 등 관계법령과 휴~식의 이용약관 및 개인정보취급방침, 휴~식에서 별도로 정한 지침 등에 의합니다.\r\n");
      out.write("\r\n");
      out.write("제 3 조 (서비스 내용)\r\n");
      out.write("휴식은 위치정보사업자인 이동통신사로부터 위치정보를 전달받아 아래와 같은 위치기반서비스를 제공합니다. \r\n");
      out.write("1.Geo Tagging 서비스: 홈페이지 이용 시, 이용자의 위치기반 정보를 수집하여 현 위치 및 검색한 위치의 정보를 제공하고 있습니다.\r\n");
      out.write("2.위치정보를 활용한 검색결과 제공 서비스: 정보 검색을 요청하거나 개인위치정보주체 또는 이동성 있는 기기의 위치정보를 제공 시 본 위치정보를 이용한 검색결과 및 주변결과(맛집, 교통상황, 교통수단 등)를 제시합니다.\r\n");
      out.write("3.이용자 보호 및 부정 이용 방지: 개인위치정보주체 또는 이동성 있는 기기의 위치를 이용하여 권한없는 자의 비정상적인 서비스 이용 시도 등을 차단합니다.\r\n");
      out.write(" </textarea>\r\n");
      out.write("   </div>\r\n");
      out.write(" </div>\r\n");
      out.write(" <div align=\"center\">\r\n");
      out.write("  <br/>\r\n");
      out.write("  <input type=\"submit\" value=\"동의\"><input type=\"reset\" value=\"비동의\">\r\n");
      out.write("  <br/>\r\n");
      out.write(" </div>\r\n");
      out.write("</div>\r\n");
      out.write("</form>\r\n");
      out.write("<!-- check Box 이벤트처리를 위한 Script -->\r\n");
      out.write("<script>\r\n");
      out.write("var doc = document;\r\n");
      out.write("  var form1 = doc.getElementById('form1');\r\n");
      out.write("  var inputs = form1.getElementsByTagName('INPUT');\r\n");
      out.write("  var form1_data = {\r\n");
      out.write("   \"c1\": false,  //전체 선택\r\n");
      out.write("   \"c2\": false,  //필수 선택 1\r\n");
      out.write("   \"c3\": false   //필수 선택 2\r\n");
      out.write("  };\r\n");
      out.write("\r\n");
      out.write("  var c1 = doc.getElementById('c1');\r\n");
      out.write("  var c2 = doc.getElementById('c2');\r\n");
      out.write("  var c3 = doc.getElementById('c3');\r\n");
      out.write("\r\n");
      out.write("  function checkboxListener() {\r\n");
      out.write("   form1_data[this.name] = this.checked; //각각 자신의 checkBox를 Checked 상태로 바꿈\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("   c1.onclick = c2.onclick = c3.onclick = checkboxListener;   //c1, C2, C3를 checkBoxListenner를 호출하여\r\n");
      out.write("                                                                   //Checked로 바꿈\r\n");
      out.write("   var all = doc.getElementById('all');  //전체 체크를 위한 체크박스 선언\r\n");
      out.write("\r\n");
      out.write("   all.onclick = function() {  //전체 체크를 누를 시\r\n");
      out.write("    if (this.checked) {\r\n");
      out.write("     setCheckbox(form1_data, true);   //form1_data(c1,c2,c3)의 값을 모두 Checked로 바꿈\r\n");
      out.write("    } else {\r\n");
      out.write("     setCheckbox(form1_data, false);  ////form1_data(c1,c2,c3)의 값을 모두 no checked로 바꿈\r\n");
      out.write("    }\r\n");
      out.write("   };\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("   function setCheckbox(obj, state) { //checkbox상태 변경하는 함수\r\n");
      out.write("    for (var x in obj) {\r\n");
      out.write("     obj[x] = state;\r\n");
      out.write("\r\n");
      out.write("     for(var i = 0; i < inputs.length; i++) {\r\n");
      out.write("      if(inputs[i].type == \"checkbox\") {\r\n");
      out.write("       inputs[i].checked = state;\r\n");
      out.write("      }\r\n");
      out.write("     }\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("   }\r\n");
      out.write("\r\n");
      out.write("  form1.onsubmit = function(e) {\r\n");
      out.write("   e.preventDefault();\r\n");
      out.write("\r\n");
      out.write("   if ( !form1_data['c1'] ) {\r\n");
      out.write("    alert('이용동의 약관에 동의하지 않았습니다.');\r\n");
      out.write("    return false;\r\n");
      out.write("   }\r\n");
      out.write("\r\n");
      out.write("   if ( !form1_data['c2'] ) {\r\n");
      out.write("    alert('개인정보 수집 및 이용에 대한 안내를 동의하지 않았습니다.');\r\n");
      out.write("    return false;\r\n");
      out.write("   }\r\n");
      out.write("\r\n");
      out.write("   this.submit();\r\n");
      out.write("  };\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /header/header.jsp(100,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("review");
      // /header/header.jsp(100,4) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/header/header.jsp(100,4) '${nameis.review}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${nameis.review}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /header/header.jsp(100,4) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVarStatus("i");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\t<li><a href=\"info.go?site=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${review.restno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${i.count}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(' ');
            out.write(' ');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${review.restname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(' ');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${review.restis}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("점</a></li>\r\n");
            out.write("\t\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
